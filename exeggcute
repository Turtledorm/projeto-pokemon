#!/bin/bash
# Script que executa de forma simplificada o programa em Python de Pokémon.
# O nome é uma homenagem a um Pokémon chamado Exeggcute (sim, é uma piada ruim).

# Vai até diretório raiz do projeto
cd "$(dirname "${BASH_SOURCE[0]}")"

# Nome dos diretórios
pokedir="pokemon"
srcdir="src"

# --------------------------------------------------------------------
# Mostra como usar o script.

function uso {
    args="[\e[1m-h\e[0m] [\e[1m-p\e[0m] <\e[1m-l\e[0m> <\e[1m-c\e[0m> <\e[1m-s\e[0m> [\e[1m-a\e[0m] [\e[1m-b\e[0m] [\e[1m-d\e[0m]\n"

    echo -e "\e[1mUSO\e[0m"
    echo -e "\t$0 [\e[1mPokémon 1\e[0m] [\e[1mPokémon 2\e[0m] $args\n"

    echo -e "\e[1mDESCRIÇÃO\e[0m"
    echo -e "\tExecuta o '${srcdir}/main.py' com os Pokémons em '${pokedir}' citados como parâmetros."
    echo -e "\tOs Pokémons devem ser digitados sem a extensão '.txt'. Por exemplo:\n"
    echo -e "\t$0 Blastoise Charizard -l\n"
    echo -e "\tSe nenhum Pokémon for passado como parâmetro, a escolha será aleatória."
    echo -e "\tA ordem em que as opções são digitadas é indiferente à execução.\n"

    echo -e "\e[1mOPÇÕES DO EXEGGCUTE\e[0m"
    echo -e "\tSepare cada opção com um espaço.\n"

    echo -e "\t\e[1m-h\e[0m\tMostra como usar o script, além de abandoná-lo.\n"
    echo -e "\t\e[1m-p\e[0m\tMostra os Pokémons disponíveis e abandona o script.\n"

    echo -e "\e[1mOPÇÕES ESSENCIAIS DO PROGRAMA PRINCIPAL\e[0m"
    echo -e "\tÉ necessário ter um dos comandos abaixo para o programa funcionar.\n"

    echo -e "\t\e[1m-l\e[0m\tRoda o programa localmente (modo offline). Usa dois Pokémons.\n"
    echo -e "\t\e[1m-c\e[0m\tExecuta o programa como cliente. Usa um Pokémon.\n"
    echo -e "\t\e[1m-s\e[0m\tExecuta o programa como servidor. Usa um Pokémon.\n"

    echo -e "\e[1mOPÇÕES EXTRAS DO PROGRAMA PRINCIPAL\e[0m"
    echo -e "\tSepare cada opção com um espaço.\n"

    echo -e "\t\e[1m-a\e[0m\tFaz com que todos os Pokémons sejam CPUs.\n"
    echo -e "\t\e[1m-b\e[0m\tFaz com que o primeiro Pokémon seja um CPU.\n"
    echo -e "\t\e[1m-d\e[0m\tModo debug. Atributos ocultos serão explicitados.\n"

    exit 0
}

# --------------------------------------------------------------------
# MAIN

args=()         # Vetor guardando os argumentos do programa principal
a_cont=0        # Número de argumentos do programa principal

b_local=false   # Argumento para batalha local
prog=false      # Analisa se o programa terá execução
debug=false     # Se o jogo inicia em modo debug

pokes=""        # String para guardar os Pokémons passados ao programa principal
p_cont=0        # Número de Pokémons passados como parâmetro

# Verifica os argumentos especiais
for arg in "$@"; do
    case $arg in
    -h)
        uso;;
    -p)
        ls $pokedir | sed 's/\.txt//' # Exibe Pokémons sem o '.txt'
        exit;;
    -[l,s,c,a,b,d])
        case $arg in -[l,s,c])
            prog=true
            if [[ $arg == "-l" ]]; then b_local=true; fi;;
        esac
        args[$a_cont]="$arg"
        a_cont=$((a_cont + 1));;
    *)
        pokes="$pokes $arg"
        p_cont=$((p_cont + 1));;
    esac
done

# Mostra o modo de uso se o programa não tiver argumento útil
if [[ $prog == false ]]; then uso; fi

# Verifica se o virtualenv está instalado 
if [[ ! -f "bin/activate" ]]; then
    echo -e "\e[1mERRO:\e[0m virtualenv não está instalado."
    echo -e "Por favor, execute o script 'pyenv' para corrigir o problema."
    exit 1
fi;

# Quebra a string "pokes" em um array
pokes=(${pokes// / })

# Executa o programa conforme o nº de Pokémons e argumentos passados
source bin/activate
rand="ls $pokedir | shuf -n 1 | sed 's/\.txt//'" # Busca um Pokémon aleatório
if (( $p_cont == 0 )); then
    pokes[0]=$(eval $rand)
fi
pokearq0="$pokedir/${pokes[0]}.txt"
if [[ ! -f "$pokearq0" ]]; then
    echo "${pokes[0]} não encontrado!"
    exit 1
fi
arqs=$pokearq0
if [[ $b_local == true ]]; then
    if [[ $p_cont < 2 ]]; then
        pokes[1]=$(eval $rand)
    fi
    pokearq1="$pokedir/${pokes[1]}.txt"
    if [[ ! -f "$pokearq1" ]]; then
        echo "${pokes[1]} não encontrado!"
        exit 1
    fi
    arqs=$arqs" "$pokearq1
fi
cat $arqs - | python3 $srcdir ${args[*]}
